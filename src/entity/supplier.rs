//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use serde_json::Value;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "supplier")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub realm: String,
    #[sea_orm(unique)]
    pub supplier_code: String,
    pub supplier_name: String,
    pub supplier_type: i16,
    pub priority: i16,
    pub qa_deposit: Decimal,
    pub qa_deposit_paid: bool,
    pub one_time: bool,
    pub sign_contract: bool,
    #[sea_orm(column_type = "JsonBinary")]
    pub ext: Json,
    pub data_state: i16,
    pub create_by: String,
    pub update_by: String,
    pub create_time: DateTime,
    pub update_time: DateTime,
    pub supplier_nature: i16,
    pub supplier_id_code: String,
    pub source_system: String,
    pub third_supplier_code: String,
    pub address: String,
    #[sea_orm(column_type = "JsonBinary")]
    pub supplier_certification: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
